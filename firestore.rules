rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/settings/admins) && 
             request.auth.uid in get(/databases/$(database)/documents/settings/admins).data.adminIds;
    }

    // Allow anyone to read public data
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Admin settings document
    match /settings/admins {
      allow read: if request.auth != null && 
                  exists(/databases/$(database)/documents/settings/admins) && 
                  request.auth.uid in resource.data.adminIds;
      allow write: if request.auth != null && 
                   exists(/databases/$(database)/documents/settings/admins) && 
                   request.auth.uid in resource.data.adminIds;
    }
    
    // Brackets - allow admins to update any bracket
    match /brackets/{bracketId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                             (request.auth.uid == resource.data.userId || isAdmin());
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}